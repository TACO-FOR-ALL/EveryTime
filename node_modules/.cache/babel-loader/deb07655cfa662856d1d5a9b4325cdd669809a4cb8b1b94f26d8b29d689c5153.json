{"ast":null,"code":"var _jsxFileName = \"/Users/kjhkjh827/EveryTime/src/PasswordResetPage.js\",\n  _s = $RefreshSig$();\n//PasswordResetPage.js\nimport React, { useState } from 'react';\nimport './css/PasswordResetPage.css'; // 비밀번호 찾기 페이지 전용 CSS 파일\nimport { useNavigate } from 'react-router-dom'; // useNavigate 훅 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordResetPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate(); // 네비게이션 함수 사용\n\n  const handlePasswordReset = async () => {\n    try {\n      // 백엔드로 이메일을 전송하여 비밀번호 재설정 요청\n      const response = await fetch('/api/password-reset', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n\n      // 요청 성공 후 두 번째 화면으로 이동\n      //if (data.success) {\n      // 이메일이 가입되어 있을 경우\n      // alert('임시 비밀번호가 이메일로 전송되었습니다.');\n      if (data.success) {\n        navigate('/password-reset-confirm'); // 비밀번호 재설정 성공 화면으로 리다이렉트\n      } else {\n        // 가입되어 있지 않은 이메일일 경우\n        alert('가입되어 있지 않은 이메일입니다.');\n      }\n    } catch (error) {\n      // 네트워크 에러나 기타 예외 처리\n      alert('비밀번호 재설정 중 오류가 발생했습니다.');\n      console.error('Password reset error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Everytime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"for Foreign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title2\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD559\\uAD50 \\uC774\\uBA54\\uC77C\\uC744 \\uD1B5\\uD574\\uC11C \\uD68C\\uC6D0\\uAC00\\uC785\\uC744 \\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"\\uAC00\\uC785\\uB41C \\uD559\\uAD50 \\uC774\\uBA54\\uC77C\",\n        className: \"email-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordReset,\n        className: \"reset-button\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"footer-text\",\n        children: \"\\u203B\\uB9CC\\uC57D \\uC774\\uBA54\\uC77C\\uC774 \\uC624\\uC9C0 \\uC54A\\uC558\\uC744 \\uACBD\\uC6B0 \\uC2A4\\uD338 \\uD3B8\\uC9C0\\uD568\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"footer-text\",\n      children: \"\\u203B\\uAC00\\uC785\\uB41C \\uC544\\uC774\\uB514\\uAC00 \\uC788\\uC744 \\uACBD\\uC6B0, \\uC785\\uB825\\uD558\\uC2E0 \\uC774\\uBA54\\uC77C\\uB85C \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC548\\uB0B4\\uD574\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordResetPage, \"J7p/BBmoSTN1LG3mq3dDy/zGbg4=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordResetPage;\nexport default PasswordResetPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordResetPage","_s","email","setEmail","navigate","handlePasswordReset","response","fetch","method","headers","body","JSON","stringify","data","json","success","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/kjhkjh827/EveryTime/src/PasswordResetPage.js"],"sourcesContent":["//PasswordResetPage.js\nimport React, { useState } from 'react';\nimport './css/PasswordResetPage.css'; // 비밀번호 찾기 페이지 전용 CSS 파일\nimport { useNavigate } from 'react-router-dom'; // useNavigate 훅 임포트\n\nfunction PasswordResetPage() {\n  const [email, setEmail] = useState('');\n\n  const navigate = useNavigate(); // 네비게이션 함수 사용\n\n  const handlePasswordReset = async () => {\n    try {\n      // 백엔드로 이메일을 전송하여 비밀번호 재설정 요청\n      const response = await fetch('/api/password-reset', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n\n      // 요청 성공 후 두 번째 화면으로 이동\n      //if (data.success) {\n      // 이메일이 가입되어 있을 경우\n      // alert('임시 비밀번호가 이메일로 전송되었습니다.');\n      if (data.success) {\n      navigate('/password-reset-confirm'); // 비밀번호 재설정 성공 화면으로 리다이렉트\n      } else {\n        // 가입되어 있지 않은 이메일일 경우\n        alert('가입되어 있지 않은 이메일입니다.');\n      }\n    } catch (error) {\n      // 네트워크 에러나 기타 예외 처리\n      alert('비밀번호 재설정 중 오류가 발생했습니다.');\n      console.error('Password reset error:', error);\n    }\n  };\n\n  return (\n    <div className=\"password-reset-container\">\n      <div className=\"title-container\">\n        <h1>Everytime</h1>\n        <p>for Foreign</p>\n      </div>\n      <div className=\"title2\">\n        <h1>비밀번호 찾기</h1>\n      </div>\n      <div className=\"content\">\n        <p>학교 이메일을 통해서 회원가입을 하실 수 있습니다</p>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"가입된 학교 이메일\"\n          className=\"email-input\"\n        />\n        <button\n          onClick={handlePasswordReset}\n          className=\"reset-button\"\n        >\n          비밀번호 찾기\n        </button>\n      </div>\n      <div className=\"footer\">\n      <span className=\"footer-text\">\n        ※만약 이메일이 오지 않았을 경우 스팸 편지함을 확인해주세요.\n      </span>\n      </div>\n      <span className=\"footer-text\">\n        ※가입된 아이디가 있을 경우, 입력하신 이메일로 비밀번호를 안내해드립니다.\n      </span>\n    </div>\n  ); \n}\n\nexport default PasswordResetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}